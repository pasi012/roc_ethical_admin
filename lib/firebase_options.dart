// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyD8XjsHGYOF_M6GsQooVkYye86WO3sI8OI',
    appId: '1:301725012304:web:abd5f20d94d4c179291c55',
    messagingSenderId: '301725012304',
    projectId: 'roc-ethical-c7f1b',
    authDomain: 'roc-ethical-c7f1b.firebaseapp.com',
    storageBucket: 'roc-ethical-c7f1b.appspot.com',
    measurementId: 'G-3NZNDCTVGN',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAtrp62mBP6z1c3BQ6UZ9clS4maBAsQ3Rw',
    appId: '1:301725012304:android:5bc26018c1746139291c55',
    messagingSenderId: '301725012304',
    projectId: 'roc-ethical-c7f1b',
    storageBucket: 'roc-ethical-c7f1b.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCajN51yeu8X6Y5Cq6G8-4bw4TcNE9odjQ',
    appId: '1:301725012304:ios:7dc9be925d4ed28d291c55',
    messagingSenderId: '301725012304',
    projectId: 'roc-ethical-c7f1b',
    storageBucket: 'roc-ethical-c7f1b.appspot.com',
    androidClientId: '301725012304-j3gbrd94ggk9c7alhqeq2i2h0gfh50ct.apps.googleusercontent.com',
    iosClientId: '301725012304-ffve2d0ffcni3o1l3e07f5s117n8slsd.apps.googleusercontent.com',
    iosBundleId: 'com.fashion.rocEthicalAdmin',
  );

}